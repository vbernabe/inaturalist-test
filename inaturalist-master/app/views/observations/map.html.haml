- content_for :extracss do
  = stylesheet_link_tag 'observations/_map'

- content_for :extrajs do
  = google_maps_js
  = javascript_include_tag "map_bundle"
  :javascript
    $(document).ready(function() {
      $("#map").taxonMap({ urlCoords: true, mapType: google.maps.MapTypeId.#{ @map_type },
        showLegend: true });
      window.map = $("#map").data("taxonMap");

      // getting the coordinates from the URL and the site default BOUNDS
      // we want to use the site default unless there URL specifies something else
      var BOUNDS = #{ CONFIG.bounds ? raw(CONFIG.bounds.to_h.to_json) : "false" };
      if( window.location.search === "" && !BOUNDS ) {
        coord = { lat: 10, lng: 20, zoom: 2 };
      }
      if( BOUNDS ) {
        var bounds = new google.maps.LatLngBounds(
          new google.maps.LatLng(BOUNDS.swlat, BOUNDS.swlng),
          new google.maps.LatLng(BOUNDS.nelat, BOUNDS.nelng)
        )
        map.fitBounds(bounds)
      }
      
      // add the site logo to the bottom of the map
      var largeLogoURL = "#{ CONFIG.logo_large ? asset_path(CONFIG.logo_large) : nil }";
      if (largeLogoURL) {
        var logoLink = document.createElement("a");
        logoLink.style.padding = "5px";
        var logoImage = document.createElement("img");
        logoImage.src = largeLogoURL;
        logoImage.style.width = "200px";
        logoLink.appendChild(logoImage);
        $(logoLink).css("cursor", "pointer").click(function() {
          window.location = "#{ root_url }";
        });
        logoLink.index = 1;
        window.map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(logoLink);
      }
      
      // add the 'About this map' link
      var aboutDiv = document.createElement("div");
      aboutDiv.style.padding = "7px";
      aboutDiv.style.color = "white";
      aboutDiv.style["font-size"] = "14px";
      aboutDiv.innerHTML = "#{ I18n.t(:about_this_map) }";
      $(aboutDiv).css("cursor", "pointer").click(function() {
        window.location = "#{ @about_url }";
      });
      window.map.controls[google.maps.ControlPosition.BOTTOM_LEFT].push(aboutDiv);
      
      // add the Taxon label to the top of the map
      var taxon = #{ @taxon_hash.to_json };
      if( taxon && taxon.display_label ) {
        var taxonNameDiv = document.createElement("div");
        taxonNameDiv.style.padding = "5px";
        taxonNameDiv.style.color = "white";
        taxonNameDiv.style["font-size"] = "20px";
        taxonNameDiv.innerHTML = taxon.display_label;
        $(taxonNameDiv).css("cursor", "pointer").click(function() {
          window.location = "#{ taxon_url(@taxon) if @taxon }";
        });
        window.map.controls[google.maps.ControlPosition.TOP_CENTER].push(taxonNameDiv);
      }
    });
:ruby
  a = {
    taxon_layers: @taxa.map{ |t|
      @elastic_params.merge(
        taxon: t,
        ranges: true,
        places: true,
        observations: @elastic_params.merge(grid_color: @default_color),
        gbif: { disabled: true }
      )
    },
    place_layers: @places.map{ |p| { place: p } },
    enable_show_all_layer: (@taxa.empty? && @user.nil? && @project.nil?) ? true : false,
    show_all_layer: (@taxa.empty? && @user.nil? && @project.nil?) ?
      @elastic_params.merge(grid_color: @default_color) :
      { grid_color: @default_color },
    disable_fullscreen: true,
    url_coords: true,
    map_style: @map_style,
    min_zoom: 2
  }
  if @project
    a.merge! observation_layers: [ @elastic_params.merge(
      project_id: @project.id, 
      title: "Observations from #{@project.title}"
    ) ]
  end
  if @user
    a[:observation_layers] ||= []
    a[:observation_layers] << @elastic_params.merge(
      user_id: @user.id, title: "Observations by #{@user.login}")
  end
  if @render_place
    a[:place_layers] = [ { place: @render_place } ];
  end
#map.fullscreen{ setup_map_tag_attrs(a) }
